// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`useFetcher should dispatch an action that fetches a create 1`] = `
Object {
  "meta": Object {
    "options": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "rest-hooks/rpc",
    "schema": [Function],
    "throttle": false,
    "url": "POST http://test.com/article-cooler/",
  },
  "payload": [Function],
  "type": "rest-hooks/fetch",
}
`;

exports[`useFetcher should dispatch an action that fetches a full update 1`] = `
Object {
  "meta": Object {
    "options": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "rest-hooks/rpc",
    "schema": [Function],
    "throttle": false,
    "url": "PUT http://test.com/article-cooler/1",
  },
  "payload": [Function],
  "type": "rest-hooks/fetch",
}
`;

exports[`useFetcher should dispatch an action that fetches a partial update 1`] = `
Object {
  "meta": Object {
    "options": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "rest-hooks/rpc",
    "schema": [Function],
    "throttle": false,
    "url": "PATCH http://test.com/article-cooler/1",
  },
  "payload": [Function],
  "type": "rest-hooks/fetch",
}
`;

exports[`useFetcher should dispatch an action with multiple updaters in the meta if update shapes params are passed in 1`] = `
Object {
  "meta": Object {
    "options": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "rest-hooks/rpc",
    "schema": [Function],
    "throttle": false,
    "updaters": Object {
      "GET http://test.com/article/": [Function],
      "http://test.com/article/some-list-url": [Function],
    },
    "url": "POST http://test.com/article/",
  },
  "payload": [Function],
  "type": "rest-hooks/fetch",
}
`;

exports[`useFetcher should dispatch an action with updater in the meta if update shapes params are passed in 1`] = `
Object {
  "meta": Object {
    "options": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "rest-hooks/rpc",
    "schema": [Function],
    "throttle": false,
    "updaters": Object {
      "GET http://test.com/article-cooler/": [Function],
    },
    "url": "POST http://test.com/article-cooler/",
  },
  "payload": [Function],
  "type": "rest-hooks/fetch",
}
`;

exports[`useRetrieve should dispatch singles 1`] = `
Object {
  "meta": Object {
    "options": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "rest-hooks/receive",
    "schema": [Function],
    "throttle": true,
    "url": "GET http://test.com/article-cooler/5",
  },
  "payload": [Function],
  "type": "rest-hooks/fetch",
}
`;

exports[`useRetrieve should dispatch with fetch shape defined dataExpiryLength 1`] = `
Object {
  "meta": Object {
    "options": Object {
      "dataExpiryLength": 3600000,
    },
    "reject": [Function],
    "resolve": [Function],
    "responseType": "rest-hooks/receive",
    "schema": [Function],
    "throttle": true,
    "url": "GET http://test.com/article-static/5",
  },
  "payload": [Function],
  "type": "rest-hooks/fetch",
}
`;

exports[`useRetrieve should dispatch with fetch shape defined errorExpiryLength 1`] = `
Object {
  "meta": Object {
    "options": Object {
      "dataExpiryLength": Infinity,
      "errorExpiryLength": Infinity,
    },
    "reject": [Function],
    "resolve": [Function],
    "responseType": "rest-hooks/receive",
    "schema": [Function],
    "throttle": true,
    "url": "GET http://test.com/article-static/5",
  },
  "payload": [Function],
  "type": "rest-hooks/fetch",
}
`;

exports[`useRetrieve should dispatch with resource defined dataExpiryLength 1`] = `
Object {
  "meta": Object {
    "options": Object {
      "dataExpiryLength": Infinity,
    },
    "reject": [Function],
    "resolve": [Function],
    "responseType": "rest-hooks/receive",
    "schema": [Function],
    "throttle": true,
    "url": "GET http://test.com/article-static/5",
  },
  "payload": [Function],
  "type": "rest-hooks/fetch",
}
`;
