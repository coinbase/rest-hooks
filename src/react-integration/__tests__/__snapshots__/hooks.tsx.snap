// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`useCache should select paginated results 1`] = `
Array [
  PaginatedArticleResource {
    "author": null,
    "content": "the best things in life com efree",
    "id": 23,
    "tags": Array [
      "one",
      "two",
    ],
    "title": "the first draft",
  },
  PaginatedArticleResource {
    "author": null,
    "content": "the best things in life com efree",
    "id": 44,
    "tags": Array [
      "hbh",
      "wew",
    ],
    "title": "the second book",
  },
  PaginatedArticleResource {
    "author": null,
    "content": "the best things in life com efree",
    "id": 2,
    "tags": Array [
      "free",
      "honey",
    ],
    "title": "the third novel",
  },
  PaginatedArticleResource {
    "author": null,
    "content": "the best things in life com efree",
    "id": 643,
    "tags": Array [],
    "title": "a long time ago",
  },
]
`;

exports[`useFetcher should dispatch an action that fetches a create 1`] = `
Object {
  "meta": Object {
    "dataExpiryLength": undefined,
    "errorExpiryLength": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "rpc",
    "schema": EntitySchema {
      "_getId": [Function],
      "_idAttribute": [Function],
      "_key": "http://test.com/article-cooler/",
      "_mergeStrategy": [Function],
      "_processStrategy": [Function],
      "denormalize": [Function],
      "schema": Object {},
    },
    "throttle": false,
    "url": "http://test.com/article-cooler/",
  },
  "payload": [Function],
  "type": "fetch",
}
`;

exports[`useFetcher should dispatch an action that fetches a full update 1`] = `
Object {
  "meta": Object {
    "dataExpiryLength": undefined,
    "errorExpiryLength": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "rpc",
    "schema": EntitySchema {
      "_getId": [Function],
      "_idAttribute": [Function],
      "_key": "http://test.com/article-cooler/",
      "_mergeStrategy": [Function],
      "_processStrategy": [Function],
      "denormalize": [Function],
      "schema": Object {},
    },
    "throttle": false,
    "url": "http://test.com/article-cooler/1",
  },
  "payload": [Function],
  "type": "fetch",
}
`;

exports[`useFetcher should dispatch an action that fetches a partial update 1`] = `
Object {
  "meta": Object {
    "dataExpiryLength": undefined,
    "errorExpiryLength": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "rpc",
    "schema": EntitySchema {
      "_getId": [Function],
      "_idAttribute": [Function],
      "_key": "http://test.com/article-cooler/",
      "_mergeStrategy": [Function],
      "_processStrategy": [Function],
      "denormalize": [Function],
      "schema": Object {},
    },
    "throttle": false,
    "url": "http://test.com/article-cooler/1",
  },
  "payload": [Function],
  "type": "fetch",
}
`;

exports[`useResource should dispatch an action that fetches 1`] = `
Object {
  "meta": Object {
    "dataExpiryLength": undefined,
    "errorExpiryLength": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "receive",
    "schema": EntitySchema {
      "_getId": [Function],
      "_idAttribute": [Function],
      "_key": "http://test.com/article-cooler/",
      "_mergeStrategy": [Function],
      "_processStrategy": [Function],
      "denormalize": [Function],
      "schema": Object {},
    },
    "throttle": true,
    "url": "http://test.com/article-cooler/5",
  },
  "payload": [Function],
  "type": "fetch",
}
`;

exports[`useResource should dispatch fetch when sent multiple arguments 1`] = `
Object {
  "meta": Object {
    "dataExpiryLength": undefined,
    "errorExpiryLength": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "receive",
    "schema": EntitySchema {
      "_getId": [Function],
      "_idAttribute": [Function],
      "_key": "http://test.com/article-cooler/",
      "_mergeStrategy": [Function],
      "_processStrategy": [Function],
      "denormalize": [Function],
      "schema": Object {},
    },
    "throttle": true,
    "url": "http://test.com/article-cooler/5",
  },
  "payload": [Function],
  "type": "fetch",
}
`;

exports[`useResource should dispatch fetch when sent multiple arguments 2`] = `
Object {
  "meta": Object {
    "dataExpiryLength": undefined,
    "errorExpiryLength": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "receive",
    "schema": Array [
      EntitySchema {
        "_getId": [Function],
        "_idAttribute": [Function],
        "_key": "http://test.com/user/",
        "_mergeStrategy": [Function],
        "_processStrategy": [Function],
        "denormalize": [Function],
        "schema": Object {},
      },
    ],
    "throttle": true,
    "url": "http://test.com/user/",
  },
  "payload": [Function],
  "type": "fetch",
}
`;

exports[`useRetrieve should dispatch singles 1`] = `
Object {
  "meta": Object {
    "dataExpiryLength": undefined,
    "errorExpiryLength": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "receive",
    "schema": EntitySchema {
      "_getId": [Function],
      "_idAttribute": [Function],
      "_key": "http://test.com/article-cooler/",
      "_mergeStrategy": [Function],
      "_processStrategy": [Function],
      "denormalize": [Function],
      "schema": Object {},
    },
    "throttle": true,
    "url": "http://test.com/article-cooler/5",
  },
  "payload": [Function],
  "type": "fetch",
}
`;

exports[`useRetrieve should dispatch with request shape defined dataExpiryLength 1`] = `
Object {
  "meta": Object {
    "dataExpiryLength": 3600000,
    "errorExpiryLength": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "receive",
    "schema": EntitySchema {
      "_getId": [Function],
      "_idAttribute": [Function],
      "_key": "http://test.com/article-static/",
      "_mergeStrategy": [Function],
      "_processStrategy": [Function],
      "denormalize": [Function],
      "schema": Object {},
    },
    "throttle": true,
    "url": "http://test.com/article-static/5",
  },
  "payload": [Function],
  "type": "fetch",
}
`;

exports[`useRetrieve should dispatch with request shape defined errorExpiryLength 1`] = `
Object {
  "meta": Object {
    "dataExpiryLength": Infinity,
    "errorExpiryLength": Infinity,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "receive",
    "schema": EntitySchema {
      "_getId": [Function],
      "_idAttribute": [Function],
      "_key": "http://test.com/article-static/",
      "_mergeStrategy": [Function],
      "_processStrategy": [Function],
      "denormalize": [Function],
      "schema": Object {},
    },
    "throttle": true,
    "url": "http://test.com/article-static/5",
  },
  "payload": [Function],
  "type": "fetch",
}
`;

exports[`useRetrieve should dispatch with resource defined dataExpiryLength 1`] = `
Object {
  "meta": Object {
    "dataExpiryLength": Infinity,
    "errorExpiryLength": undefined,
    "reject": [Function],
    "resolve": [Function],
    "responseType": "receive",
    "schema": EntitySchema {
      "_getId": [Function],
      "_idAttribute": [Function],
      "_key": "http://test.com/article-static/",
      "_mergeStrategy": [Function],
      "_processStrategy": [Function],
      "denormalize": [Function],
      "schema": Object {},
    },
    "throttle": true,
    "url": "http://test.com/article-static/5",
  },
  "payload": [Function],
  "type": "fetch",
}
`;
